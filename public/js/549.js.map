{"version":3,"file":"js/549.js","mappings":"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","sources":["webpack:///./resources/js/components/select2.js","webpack:///./resources/js/userarea/Pages/Private/Layout/components/Activity.jsx","webpack:///./resources/js/userarea/Pages/Private/Tickets/NewTicket.jsx"],"sourcesContent":["export const state_select = {\n    templateResult: (state) => {\n        if(!state.id) {\n            return state.text\n        }\n        let baseUrl = `${APP_PATH}images/world-icons/`\n        let $state = $(\n        `<span class=\"span-option\"><img src=${baseUrl + state.id.toLowerCase() + \".svg\"} class=\"img-flag\"/>${state.text}</span>`)\n        return $state\n    },\n    width: \"100%\",\n    dir: \"rtl\",\n    dropdownAutoWidth: true,\n}   \n\nexport const normal = (placeholder=\"\") => ({\n    width: \"100%\",\n    dir: \"rtl\",\n    placeholder: placeholder\n})\n\nexport const department_select = {\n    width: \"100%\",\n    dir: \"rtl\",\n    placeholder: \"بخش مربوطه\",\n    templateResult: (dep) => {\n        if (!dep.title) {\n            return dep.text\n        }\n        return $(\n            `<span class=\"font-bold\">${dep.text}</span><p class=\"font-12\">${dep.title}</p>`\n        )\n    }\n}","import { Spinner } from 'react-activity'\n\nexport default function Activity({size = 34}) {\n    return (\n        <div className=\"activity-container\"><Spinner color=\"#6332df\" size={size} /></div>\n    );\n};","import React, { Component } from 'react';\n// import axios from 'axios';\nimport { department_select } from '../../../../components/select2'\nimport AlertService from '../../../../services/AlertService';\nimport { useHttpService } from '../../../hooks';\nimport Activity from '../Layout/components/Activity';\n\nclass NewTicket extends Component {\n    state = {\n        departments: [],\n        loading: true,\n        files: [],\n        department: \"\",\n        title: \"\",\n        ticket_content: \"\"\n    }\n    sendNewTicket = async () => {\n        let { title, department, ticket_content, files } = this.state\n        let data = new FormData()\n        Object.entries({title, department, ticket_content}).map(([key, value]) => {\n            data.append(key, value)\n        })\n        files.map(file => {\n            data.append('files[]', file)\n        })\n        const response = await this.http.post('', data, { headers: { \"Content-Type\": \"multipart/form-data\" } })\n        if(response.okay) {\n            this.props.history.push(`/tickets/${response.ticket.id}`)\n        }\n    }\n    onFileSelect = (e) => {\n        let newEntries = [], files_size = 0, acceptableType = true, { files } = this.state\n        Array.prototype.push.apply(newEntries, e.target.files)\n        const regex = /image\\/\\bjpg\\b|\\bpng\\b|\\bjpeg\\b/\n        files ? newEntries = files.concat(newEntries) : null\n        for (let i = 0; i < newEntries.length; i++) {\n            let elem  = newEntries[i]\n            files_size += elem.size\n            acceptableType = regex.test(elem.type)\n            if (!acceptableType) {\n                this.Alert.error({title: \"فرمت فایل\", text: \"فقط فرمت های jpg, jpeg و png قابل قبول هستند.\"})\n                break\n            }   \n        }\n        if (acceptableType) {\n            if (newEntries.length > 3) {\n                this.Alert.error({title: \"تعداد فایل\", text: \"حد اکثر تعداد فایل های انتخابی 3 عدد می باشد.\" })\n            } else if (files_size > 12582912/*12 megabyte*/) {\n                this.Alert.error({title: \"حجم فایل های انتخابی\", text: \"حد اکثر حجم فایل های انتخابی 12 مگابایت می باشد.\" })\n            } else {\n                this.setState({\n                    files: newEntries\n                }, () => {\n                    $('#image-input').val(\"\")\n                })\n            }\n        }\n    }\n    deleteFile = (index) => {\n        let { files } = this.state\n        files.splice(index, 1)\n        this.setState({\n            files: files\n        })\n    }\n    changeDepartment = department => {\n        this.setState({department})\n    }\n    loadDepartments = async () => {\n        const response = await this.http.get('/departments')\n        if (response[0]) {\n            this.setState({\n                loading: false,\n                departments: response\n            }, () => {\n                $(\"#department-section\").select2(department_select)\n                $(\"#department-section\").on(\"select2:select\", () => {\n                    this.changeDepartment($(\"#department-section\").val())\n                })\n            })\n        }\n    }\n    componentDidMount() {\n        document.title = \"ارسال تیکت جدید\"\n        this.http = useHttpService('/userarea/tickets')\n        this.Alert = new AlertService({\n            showConfirmButton: true, confirmButtonText: \"بستن\", customClass: {container: \"rtl\"}\n        })\n        this.loadDepartments()\n    }\n    render() {\n        let { files, departments, loading } = this.state\n        return (\n            <div className=\"new-ticket-container\">\n                {loading ? <Activity/> : (\n                    <>\n                    <div className=\"input-group\">\n                        <select id=\"department-section\">\n                            <option></option>\n                            {departments.length > 0 && departments.map(dep => (\n                                <option key={dep.id} value={dep.id} title={dep.about}>{dep.name}</option>\n                            ))}\n                        </select>\n                    </div>\n                    <div className=\"input-group my-2\">\n                        <input className=\"form-control\" onChange={e => this.setState({title: e.target.value})} placeholder=\"عنوان تیکت\" />\n                    </div>\n                    <div className=\"msg-text-section\">\n                        <div className=\"input-group\">\n                            <textarea className=\"form-control\" onChange={e => this.setState({ticket_content: e.target.value})} placeholder=\"متن تیکت\"></textarea>\n                        </div>\n                        <button className=\"btn btn-lg btn-light\" onClick={this.sendNewTicket}>ارسال تیکت</button>\n                    </div>\n                    <div className=\"upload-boxes\">\n                        <div className='files-preview'>\n                            {files && files.length > 0 ? files.map((file, i) => (\n                                <div className=\"selected-image\" key={i}>\n                                    <img src={URL.createObjectURL(file)} />\n                                    <a className='badge badge-pill badge-dark' onClick={this.deleteFile.bind(this, i)}><i className='far fa-trash-alt'></i></a>\n                                </div>\n                            )) : \"فایل های ضمیمه شما در این قسمت نمایش داده می شود\"\n                            }\n                        </div>\n                        <div className='choose-file'>\n                            <h4>افزودن عکس</h4>\n                            <span>[jpg, jpeg, png]</span>\n                            <input className='d-none' type=\"file\" name=\"image-input\" id=\"image-input\" onChange={this.onFileSelect} accept=\".png,.jpg,.jpeg\" multiple />\n                            <label className=\"btn btn-light btn-sm\" htmlFor='image-input'>انتخاب</label>\n                        </div>\n                        {/* <div>\n                            <h4>افزودن فایل</h4>\n                            <span>[tiff, psd, gif]</span>\n                            <input className='d-none' type=\"file\" name=\"file-input\" id=\"file-input\" onChange={this.onFileSelect} />\n                            <label className=\"btn btn-light btn-sm\" htmlFor='file-input'>انتخاب</label>\n                        </div> */}\n                    </div>\n                    </>\n                )}\n            </div>\n        );\n    }\n}\n\nexport default NewTicket;"],"names":["state_select","templateResult","state","id","text","baseUrl","APP_PATH","$","toLowerCase","width","dir","dropdownAutoWidth","normal","placeholder","department_select","dep","title","Activity","size","className","Spinner","color","NewTicket","departments","loading","files","department","ticket_content","data","FormData","Object","entries","map","key","value","append","file","http","post","headers","response","okay","props","history","push","ticket","e","newEntries","files_size","acceptableType","Array","prototype","apply","target","regex","concat","i","length","elem","test","type","Alert","error","setState","val","index","splice","get","select2","on","changeDepartment","document","this","useHttpService","AlertService","showConfirmButton","confirmButtonText","customClass","container","loadDepartments","about","name","onChange","onClick","sendNewTicket","src","URL","createObjectURL","deleteFile","bind","onFileSelect","accept","multiple","htmlFor","Component"],"sourceRoot":""}