{"version":3,"file":"js/314.js","mappings":";2fAAO,IAAMA,EAAb,WACI,WAAYC,EAAWC,GAAkB,IAAZC,EAAY,uDAAN,KAAM,UACrCC,KAAKH,UAAYI,KAAKC,MAAMD,KAAKE,UAAUN,IAC3CG,KAAKD,MAAQA,EACb,IAAIK,EAAON,EAAKO,MAAM,KAClBD,EAAKE,OAAS,GACdN,KAAKO,QAAUH,EAAKI,MACpBR,KAAKS,QAAUL,EAAKM,QAAO,SAACb,EAAWc,GAAZ,OACvBd,EAAUc,GAAOd,EAAUc,KAASC,MAAMC,QAAQhB,EAAUc,IAAQd,EAAUc,GAAO,CAAC,CAD/D,GAEzBX,KAAKH,aAEPG,KAAKS,QAAUT,KAAKH,UACpBG,KAAKO,QAAUT,EAEtB,WAdL,iCAgBI,WAEI,OADAE,KAAKS,QAAQT,KAAKO,SAAWP,KAAKD,MAC3BC,KAAKH,SACf,GAnBL,iBAqBI,WAAM,MACF,iBAAOG,KAAKS,QAAQT,KAAKO,gBAAzB,QAAmC,EACtC,oFAvBL,KA0BO,SAASO,EAAWC,GACvB,OAAQC,OAAOZ,KAAKW,GAAKT,MAC5B,CAEM,IAAMW,EAAY,SAACN,GAAQ,MAmB9B,OAlBS,KAEL,SAAY,SACZ,OAAU,OACV,gBAAiB,aACjB,cAAe,eACf,SAAY,WAEZ,UAAa,eACb,SAAY,eACZ,UAAa,eACb,MAAS,cACT,QAAW,gBACX,SAAY,UACZ,UAAa,aAdR,WAeO,eAfP,IAgBL,cAAe,iBAhBV,GAkBEA,EACd,EAEYO,EAAgB,SAACC,GAAD,IAASC,EAAT,wEAAiCC,OAAOF,GAAQG,eAAe,UAA/D,OAA0EF,EAAW,SAAW,GAAhG,u/CCpC7B,QAdMG,SAAAA,yYACF,WACI,MAA0FvB,KAAKwB,MAAzFzB,EAAN,EAAMA,MAAO0B,EAAb,EAAaA,MAAOC,EAApB,EAAoBA,gBAAiB5B,EAArC,EAAqCA,KAArC,IAA2C6B,KAAAA,OAA3C,MAAgD,OAAhD,MAAwDC,eAAAA,OAAxD,MAAuE,KAAvE,EAA6EC,EAA7E,EAA6EA,SAC7E,OACI,iBAAKC,UAAU,6BAAf,WACI,6BAAM,cAAGA,UAAU,cAAb,SAA4BD,GAAY,MAASJ,EAAvD,QACA,gBAAKK,UAAU,cAAf,UACI,kBAAOH,KAAMA,EAAMG,UAAU,eAAe/B,MAAOA,QAAAA,EAAS,GAAIgC,SAAU,SAACC,GAAD,OAAON,EAAgB5B,EAAMkC,EAAEC,OAAQL,EAAgBH,EAAOI,EAA9D,QAIzF,sFAXCN,CAAkBW,EAAAA,2XCDxB,4gGAAAC,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,w3EASMC,EAAAA,SAAAA,gTACF,WAAYZ,GAAO,wHACf,cAAMA,IADS,cAUN,SAAC1B,EAAMmC,EAAQL,EAAgBH,EAAOI,GAAgC,IAAtBQ,EAAsB,wDACzEC,EAAe,EAAKd,MAApBc,WAA4BC,EAAQ,EAAKC,MAAbD,KAAoB1C,EAAY,EAAK2C,MAAMF,GAAcvC,EAASkC,EAATlC,MAAiB0C,EAAS,GAAIC,EAAiB,CAAC,CAACd,eAAgBA,EAAgB7B,MAAOA,EAAO0B,MAAOA,EAAOI,SAAUA,SAAAA,IAClN,IAAKQ,GAAeM,IAAAA,UAAoB5C,EAAO,CAAC6C,YAAY,KAAoB,KAAV7C,EAAc,CAChF6B,IAAiBa,GAASI,EAAAA,EAAAA,GAASH,IACnCI,EAAEb,GAAQc,OAAO,gBAAgBC,SAAS,oBAAoBC,MAAK,SAACd,EAAGe,GAAJ,OAAWJ,EAAEI,GAAIC,QAAjB,IAC/DV,EAAOnC,QACPwC,EAAEb,GAAQmB,SAAS,aACnBX,EAAOY,KAAI,SAACC,EAAKnB,GACbW,EAAEb,GAAQc,OAAO,gBAAgBQ,MAAjC,gDAAgFD,EAAhF,YACA,EAAKE,UAAS,SAAAC,GAAS,MAAK,CAAClB,KAAM,EAAF,KAAMkB,EAAUlB,MAAhB,kBAA0BD,EAA1B,YAAwCxC,GAASwD,IAA3D,GAC1B,MAEDR,EAAEb,GAAQyB,YAAY,oBACfnB,EAAK,GAAD,OAAID,EAAJ,YAAkBxC,IAC7B,EAAK0D,SAAS,CAACjB,KAAMA,KAEzB,IAAIoB,EAAU,IAAI/D,EAAAA,GAAUC,EAAWC,EAAMC,GAC7C,EAAKyD,SAAL,KAAgBlB,EAAaqB,EAAQC,QACxC,CACJ,IA7BkB,qBA+BN,WACT,MAAgE,EAAKpC,MAA/Dc,EAAN,EAAMA,WAAYuB,EAAlB,EAAkBA,WAAYC,EAA9B,EAA8BA,eAAgBC,EAA9C,EAA8CA,cAA9C,EAAgH,EAAKvB,MAAvCwB,EAA9E,EAA8EA,KAAMC,EAApF,EAAoFA,QAASC,EAA7F,EAA6FA,SAAU3B,EAAvG,EAAuGA,KACxF,SAAfD,GAAkD,MAAzB0B,EAAKG,aAAa,KAAaH,EAAO,EAAH,KAAOA,GAAP,IAAaG,aAAcH,EAAKG,aAAaC,MAAM,OAC3GtD,EAAAA,EAAAA,GAAWyB,GACX,EAAKiB,SACD,CAACa,cAAc,EAAMC,aAAa,EAAOC,SAAS,GADtD,YAEI,yFAEYjC,EAFZ,OAGa,SAHb,OAMa,YANb,OASa,aATb,wCAI6BuB,EAAWG,GAJxC,cAIYQ,EAJZ,mDAO6BT,EAAcE,GAP3C,cAOYO,EAPZ,qDAU6BV,EAAeI,GAV5C,eAUYM,EAVZ,oCAaI,EAAKhB,UAAS,SAAAC,GACV,OAASe,EAASC,MAAmD,CAACJ,cAAc,GAA1D,CAACA,cAAc,EAAOC,aAAa,EAChE,IACKE,EAASC,OACXC,YAAW,WACP,EAAKlB,SAAS,CAACc,aAAa,GAC/B,GAAE,KAnBX,8CAwBJ,EAAKd,SAAL,GAAee,SAAS,EAAMD,aAAa,GAA3C,WAA2D,IAC3DI,YAAW,WACP,EAAKlB,SAAS,CAACe,SAAS,GAC3B,GAAE,KAEV,IAhEG,EAAK/B,MAAL,GACI6B,cAAc,EACdC,aAAa,EACbC,SAAS,EACThC,KAAM,CAAC,GACNf,EAAMc,WALX,eAK4Bd,EAAMA,EAAMc,oBALxC,QAKsD,CAAC,GAPxC,CASlB,oCA2DD,WAAS,WACL,EAA6BtC,KAAKwB,MAA5BmD,EAAN,EAAMA,OAAQrC,EAAd,EAAcA,WAAd,EAAwFtC,KAAKwC,MAAlD6B,EAA3C,EAA2CA,aAAcC,EAAzD,EAAyDA,YAAaC,EAAtE,EAAsEA,QACtE,OADA,EAA+EhC,MAE3E,4BACI,gBAAKT,UAAU,mBAAf,SACK6C,EAAOtB,KAAI,SAACuB,EAAOzC,GAChB,IAAqEN,EAAjE9B,EAAQ,IAAIH,EAAAA,GAAU,EAAK4C,MAAMF,GAAasC,EAAM9E,MAAM+E,MAI9D,MAHsC,eAAlC,UAAGvC,EAAH,YAAiBsC,EAAM9E,OACvB,IAAIF,EAAAA,GAAU,EAAK4C,MAAMF,GAAa,gBAAgBuC,MAAMvE,QAAU,IAAIuB,EAAW,IAGrF,SAAC+C,EAAME,UAAP,GAAyBpD,gBAAiB,EAAKqD,WAAYhF,MAAOA,EAAO8B,SAA4C,eAAlC,UAAGS,EAAH,YAAiBsC,EAAM9E,MAA0B+B,EAAW,MAAU+C,GAAnIzC,EAE7B,OAEL,iBAAKL,UAAU,sBAAf,WACI,mBAAQA,UAAS,8CAAyCuC,EAAe,WAAa,IAAMW,SAAUX,EAAcY,QAASjF,KAAKkF,WAAlI,iBACCb,IAAgB,SAAC,EAAAc,SAAD,CAAUC,KAAM,GAAIC,MAAM,aAC3C,iBAAKvD,UAAS,yDAAqDwC,GAAgBC,EAAqBA,EAAU,eAAiB,gBAAtC,UAA7F,WACI,iBAAMzC,UAAWyC,EAAU,SAAW,KAAtC,2CACA,iBAAMzC,UAAWwC,EAAc,SAAW,KAA1C,4DAKnB,sFA9FClC,CAAsBF,EAAAA,WA4G5B,SAAeoD,EAAAA,EAAAA,KAXS,SAAC9C,GAAD,MAAY,CAChCwB,KAAMxB,EAAM+C,KAAKvB,KACjBC,QAASzB,EAAMwB,KAAKC,QACpBC,SAAU1B,EAAM+C,KAAKvB,KAHD,IAKE,SAACwB,GAAD,MAAe,CACrC3B,WAAY,SAAAG,GAAI,OAAIwB,GAASC,EAAAA,EAAAA,IAAezB,GAA5B,EAChBF,eAAgB,SAAAI,GAAQ,OAAIsB,GAASE,EAAAA,EAAAA,IAAmBxB,GAAhC,EACxBH,cAAe,SAAAE,GAAO,OAAIuB,GAASG,EAAAA,EAAAA,IAAkB1B,GAA/B,EAHA,GAM1B,CAA2D7B,6FChF3D,QAhCA,WACI,IAAIuC,EAAS,CACT,CACIG,UAAWvD,EAAAA,EACXE,MAAO,MACP3B,KAAM,YACN8B,eAAgB,CAAC,aAAc,aAEnC,CACIkD,UAAWvD,EAAAA,EACXE,MAAO,eACP3B,KAAM,WACN8B,eAAgB,CAAC,aAAc,YAC/BC,UAAU,IAWlB,OACI,SAAC,IAAD,CACI8C,OAAQA,EACRrC,WAAa,YAGxB","sources":["webpack:///./resources/js/helpers/index.js","webpack:///./resources/js/userarea/Pages/Private/Profile/Components/TextInput.jsx","webpack:///./resources/js/userarea/Pages/Private/Profile/ProfileLayout.jsx","webpack:///./resources/js/userarea/Pages/Private/Profile/RegisterInfo.jsx"],"sourcesContent":["export class NestedObj {\n    constructor(targetObj, path, value=null) {\n        this.targetObj = JSON.parse(JSON.stringify(targetObj))\n        this.value = value\n        let keys = path.split(\".\")\n        if (keys.length > 1) {\n            this.lastKey = keys.pop()\n            this.lastObj = keys.reduce((targetObj, key) => \n                targetObj[key] = targetObj[key] && !Array.isArray(targetObj[key]) ? targetObj[key] : {}\n            , this.targetObj)\n        } else {\n            this.lastObj = this.targetObj\n            this.lastKey = path\n        }\n    }\n\n    make() {\n        this.lastObj[this.lastKey] = this.value;\n        return this.targetObj\n    }\n\n    get() {\n        return this.lastObj[this.lastKey]??\"\"\n    }\n}\n\nexport function isObjEmpty(obj) {\n    return !Object.keys(obj).length\n}\n\nexport const translate = (key) => {\n    const dic = {\n        // order methods\n        \"automate\": \"اتومات\",\n        \"manual\": \"دستی\",\n        \"just-recieved\": \"دریافت شده\",\n        \"in-progress\": \"در حال انجام\",\n        \"finished\": \"تمام شده\",\n        // statuses\n        \"submitted\": \"دریافت سفارش\",\n        \"reviewed\": \"بررسی جزئیات\",\n        \"designing\": \"در دست طراحی\",\n        \"ready\": \"آماده تحویل\",\n        \"editing\": \"در حال ویرایش\",\n        \"canceled\": \"لغو شده\",\n        \"suspended\": \"تعلیق شده\",\n        \"finished\": \"اتمام سفارش\",\n        \"checked-out\": \"تسویه و تحویل\"\n    }\n    return dic[key]\n}\n\nexport const number_format = (number, appendix = false) => `${Number(number).toLocaleString('en-US')}${appendix ? ' تومان' : ''}`","import React, { Component } from 'react';\n\nclass TextInput extends Component {\n    render() {\n        let { value, title, onChangeHandler, path, type=\"text\", validate_types=null, not_null } = this.props\n        return (\n            <div className=\"field-item col-12 col-md-6\">\n                <span><i className='text-danger'>{not_null && \"*\"}</i>{title}:</span>\n                <div className=\"input-group\">\n                    <input type={type} className=\"form-control\" value={value ?? \"\"} onChange={(e) => onChangeHandler(path, e.target, validate_types, title, not_null)} />\n                </div> \n            </div>    \n        );\n    }\n}\n\nexport default TextInput;","import React, { Component } from 'react';\nimport { Windmill } from 'react-activity'\nimport validator from \"validator\";\n// helpers\nimport validate from '../../../../helpers/Validator'\nimport { isObjEmpty, NestedObj } from '../../../../helpers';\n// redux\nimport { connect } from 'react-redux';\nimport { updateCustomerInfo, updateCompanyInfo, updateUserInfo } from '../../../redux/actions'\n\nclass ProfileLayout extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            sending_data: false,\n            showSuccess: false,\n            showErr: false,\n            errs: {},\n            [props.controller]: {...props[props.controller]}??{},\n        }\n    }\n    changeInfo = (path, target, validate_types, title, not_null, only_number=false) => {\n        let { controller } = this.props, {errs} = this.state, targetObj = this.state[controller], {value} = target, errors = [], input_validate = [{validate_types: validate_types, value: value, title: title, not_null: not_null??false}]\n        if (!only_number || validator.isNumeric(value, {no_symbols: true}) || value === \"\") {\n            validate_types ? errors = validate(input_validate) : null\n            $(target).parent(\".input-group\").siblings(\"span.text-danger\").each((i, el) => $(el).remove())\n            if (errors.length) {\n                $(target).addClass(\"input-err\")\n                errors.map((err, i) => {\n                    $(target).parent(\".input-group\").after(`<span class=\"text-danger d-block m-1\">${err}</span>`)\n                    this.setState(prevState => ({errs: {...prevState.errs, [`${controller}.${path}`]: err}}))\n                })\n            } else {\n                $(target).removeClass(\"input-err\")\n                delete errs[`${controller}.${path}`]\n                this.setState({errs: errs})\n            }\n            let newData = new NestedObj(targetObj, path, value)\n            this.setState({[controller]: newData.make()})\n        }\n    }\n\n    updateInfo = () => {\n        let { controller, modifyUser, modifyCustomer, modifyCompany } = this.props, { user, company, customer, errs } = this.state\n        controller === \"user\" && user.phone_number[0] === \"0\" ? user = {...user, phone_number: user.phone_number.slice(1)} : null\n        if (isObjEmpty(errs)) {\n            this.setState(\n                {sending_data: true, showSuccess: false, showErr: false},\n                async () => {\n                    let response;\n                    switch (controller) {\n                        case \"user\":\n                            response = await modifyUser(user)\n                            break;\n                        case \"company\":\n                            response = await modifyCompany(company)\n                            break;\n                        case \"customer\":\n                            response = await modifyCustomer(customer)\n                            break;\n                    }\n                    this.setState(prevState => {\n                        return ! response.error ? {sending_data: false, showSuccess: true} : {sending_data: false}\n                    })\n                    if (! response.error) {\n                        setTimeout(() => {\n                            this.setState({showSuccess: false})\n                        }, 5000)\n                    }\n                }\n            )\n        } else {\n            this.setState({showErr: true, showSuccess: false, showErr: false})\n            setTimeout(() => {\n                this.setState({showErr: false})\n            }, 5000)\n        }\n    }\n\n    render() {\n        let { fields, controller } = this.props, { sending_data, showSuccess, showErr, errs } = this.state\n        return (\n            <div>\n                <div className='fields-container'>\n                    {fields.map((field, i) => {\n                        let value = new NestedObj(this.state[controller], field.path).get(), not_null\n                        if (`${controller}.${field.path}` === \"user.email\") {\n                            new NestedObj(this.state[controller], \"phone_number\").get().length <= 0 ? not_null = 1 : null\n                        }\n                        return (\n                            <field.component key={i} onChangeHandler={this.changeInfo} value={value} not_null={`${controller}.${field.path}` === \"user.email\" ? not_null : null} {...field}  />\n                        )\n                    })}\n                </div>\n                <div className=\"eggplant-btn col-12\">\n                    <button className={`btn btn-lg col-12 col-md-3 col-lg-2 ${sending_data ? \"disabled\" : \"\"}`} disabled={sending_data} onClick={this.updateInfo}>ثبت</button>\n                    {sending_data && <Windmill size={30} color=\"#6332df\" />}\n                    <div className={`col-12 col-md-7 col-lg-4 alert animated fadeIn ${!showSuccess && !showErr ? \"d-none\" : showErr ? \"alert-danger\" : \"alert-success\"}`}>\n                        <span className={showErr ? \"d-none\" : null}>تغییرات شما با موفقیت ثبت شد</span>\n                        <span className={showSuccess ? \"d-none\" : null}>لطفا اطلاعات خود را به درستی وارد کنید</span>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.auth.user,\n    company: state.user.company,\n    customer: state.auth.user\n})\nconst mapDispathToProps = (dispatch) => ({\n    modifyUser: user => dispatch(updateUserInfo(user)),\n    modifyCustomer: customer => dispatch(updateCustomerInfo(customer)),\n    modifyCompany: company => dispatch(updateCompanyInfo(company))\n})\n\nexport default connect(mapStateToProps, mapDispathToProps)(ProfileLayout);","// components\nimport TextInput from './Components/TextInput';\n// import PhoneInput from './Components/PhoneInput';\nimport ProfileLayout from './ProfileLayout';\nimport { useEffect } from 'react';\n\nfunction RegisterInfo() {\n    let fields = [\n        {\n            component: TextInput,\n            title: \"نام\",\n            path: \"firstname\",\n            validate_types: [\"short_text\", \"alpha-fa\"],\n        },\n        {\n            component: TextInput,\n            title: \"نام خانوادگی\",\n            path: \"lastname\",\n            validate_types: [\"short_text\", \"alpha-fa\"],\n            not_null: true\n        },\n        // {\n        //     component: PhoneInput,\n        //     title: \"شماره تلفن (جهت پاسخگویی)\",\n        //     path: \"phone_number\",\n        //     phone_type: \"both\",\n        //     validate_types: [\"phone_number\"]\n        // },\n    ]\n\n    return (\n        <ProfileLayout \n            fields={fields} \n            controller = \"customer\" \n        />\n    );\n}\n\nexport default (RegisterInfo);"],"names":["NestedObj","targetObj","path","value","this","JSON","parse","stringify","keys","split","length","lastKey","pop","lastObj","reduce","key","Array","isArray","isObjEmpty","obj","Object","translate","number_format","number","appendix","Number","toLocaleString","TextInput","props","title","onChangeHandler","type","validate_types","not_null","className","onChange","e","target","Component","i","ProfileLayout","only_number","controller","errs","state","errors","input_validate","validator","no_symbols","validate","$","parent","siblings","each","el","remove","addClass","map","err","after","setState","prevState","removeClass","newData","make","modifyUser","modifyCustomer","modifyCompany","user","company","customer","phone_number","slice","sending_data","showSuccess","showErr","response","error","setTimeout","fields","field","get","component","changeInfo","disabled","onClick","updateInfo","Windmill","size","color","connect","auth","dispatch","updateUserInfo","updateCustomerInfo","updateCompanyInfo"],"sourceRoot":""}