{"version":3,"file":"js/152.js","mappings":"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","sources":["webpack:///./resources/js/userarea/Pages/Auth/EmailValidation.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport AlertService from '../../../services/AlertService';\nimport { changeUserEmail, resendBasedOnAuthMethod } from '../../redux/actions';\nimport { Windmill } from 'react-activity';\n\nclass EmailValidation extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            email: props.user.email,\n            edit: false,\n            editing: false,\n            resendIn: props.resend.next_attempt_in_seconds\n        }\n        this.interval = null\n        this.Alert = new AlertService()\n    }\n    componentDidMount() {\n        document.title = 'تایید ایمیل'\n    }\n    componentWillUnmount() {\n        clearInterval(this.interval)\n    }\n    setResendTime = () => {\n        let {next_attempt_in_seconds} = this.props.resend\n        clearInterval(this.interval)\n        if (next_attempt_in_seconds > 0) {\n            this.setState({resendIn: next_attempt_in_seconds}, () => {\n                this.interval = setInterval(() => {\n                    if (this.state.resendIn <= 0) {\n                        clearInterval(this.interval)\n                    } else {\n                        this.setState(prevState => ({\n                            resendIn: prevState.resendIn - 1\n                        }))\n                    }\n                }, 1000);\n            })\n        }\n    }\n    handleEdit = (e) => {\n        e.preventDefault()\n        this.setState({editing: true}, async () => {\n            const response = await this.props.editEmail(this.state.email)\n            this.setState({edit: typeof response.error !== 'undefined', editing: false}, this.setResendTime)\n        })\n    }\n    handleResend = async () => {\n        const result = await this.props.authResend('email');\n        this.setResendTime()\n        let {okay} = result.payload\n        if (okay) this.Alert.success({title: 'ایمیل حاوی لینک تایید حساب ارسال شد', timer: 2000})\n    }\n    render() {\n        let { user, resend, sending_data, history, changeSection } = this.props\n        let { edit, resendIn, editing } = this.state\n        let {left_attempts} = resend\n        return user.email && user.email_verified_at || user.phone_number && ! user.phone_verified\n        ? <Redirect to=\"/dashboard\"/>\n        : (\n            <>\n            {! edit\n            ?   <div>\n                    <h2>تایید آدرس ایمیل</h2>\n                    <p>\n                        لطفا برای فعالسازی حساب کاربری خود ایمیل ارسال شده به آدرس {user.email} را چک کنید\n                        <br />\n                        با کلیک کردن روی دکمه یا لینک قرار داده شده در داخل ایمیلی که از سمت ما برایتان ارسال شده می توانید حساب کاربری تان را فعال کنید\n                    </p>\n                    {left_attempts > 0 && \n                        <button \n                        disabled={resendIn > 0}\n                        onClick={this.handleResend}\n                        className=\"btn btn-lg\">{resendIn > 0 ? resendIn : \"ارسال مجدد ایمیل\"}</button>\n                    }\n                    <p className=\"text-right mt-5 text-small\">آدرس ایمیل {user.email} اشتباه است ؟ <span className='span-hover' onClick={() => this.setState({edit: true})}>ویرایش</span></p>\n                    <span className=\"change-form-mobile d-md-none mt-2\" onClick={changeSection.bind(this, history, \"login\")}>خروج از حساب کاربری</span>              \n                </div>\n            :   <div>\n                    <h2>ویرایش ایمیل</h2>\n                    <form onSubmit={this.handleEdit} className=\"form-group w-50\">\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                {sending_data && <span className='auth-windmill'><Windmill size={30} color=\"#6332df\" /></span>}\n                                <button disabled={editing} className=\"btn btn-def m-0 w-auto btn-success\" type=\"submit\">ویرایش</button>\n                            </div>\n                            <input type=\"text\" className=\"form-control text-left ltr\" value={this.state.email} onChange={(e) => this.setState({email: e.target.value})}/>\n                        </div>\n                    </form>\n                    <button className=\"btn btn-def btn-outline-secondary\" type=\"button\" onClick={() => this.setState({edit: false})}>بازگشت</button>\n                </div>\n            }\n            </>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.auth.user,\n    resend: state.auth.resend\n})\n\nconst mapDispatchToProps = dispatch => ({\n    editEmail: email => dispatch(changeUserEmail(email)),\n    authResend: method => dispatch(resendBasedOnAuthMethod(method))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmailValidation);"],"names":["i","EmailValidation","props","next_attempt_in_seconds","resend","clearInterval","interval","setState","resendIn","setInterval","state","prevState","e","preventDefault","editing","editEmail","email","response","edit","error","setResendTime","authResend","result","payload","okay","Alert","success","title","timer","user","AlertService","document","this","sending_data","history","changeSection","left_attempts","email_verified_at","phone_number","phone_verified","to","onSubmit","handleEdit","className","Windmill","size","color","disabled","type","value","onChange","target","onClick","handleResend","bind","Component","connect","auth","dispatch","changeUserEmail","method","resendBasedOnAuthMethod"],"sourceRoot":""}