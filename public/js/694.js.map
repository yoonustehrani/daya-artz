{"version":3,"file":"js/694.js","mappings":";+2EACA,uyMACUA,GAAV,SAAUA,IAAV,uEACQC,EAAI,EADZ,OAGQ,OAHR,SAGcA,IAHd,6DAqGA,QA9FMC,SAAAA,gTACF,WAAYC,GAAO,sHACf,cAAMA,IADS,cAQN,kBAAM,EAAKC,SAASC,OAAOC,KAA3B,IARM,uBAUJ,WACX,IACIC,EADS,EAAKC,MAAbC,KACgBC,QAAO,SAAAC,GAAG,OAAIA,EAAIC,IAAIC,OAAS,CAArB,IAC/BN,EAAYA,EAAUM,OAAS,EAAIC,KAAKC,UAAUC,OAAOC,YAAYV,EAAUW,KAAI,SAAAC,GAAI,MAAI,CAACA,EAAKP,IAAKO,EAAKb,MAApB,MAAgC,GACvH,EAAKc,cAAcd,MAAQC,CAC9B,IAfkB,oBAiBP,WACR,EAAKc,UAAS,SAAAC,GAAS,MAAK,CACxBb,KAAM,GAAF,SAAMa,EAAUb,MAAhB,CAAsB,CAACG,IAAK,GAAIN,MAAO,GAAIiB,GAAI,EAAKvB,gBADrC,GAG1B,IArBkB,wBAuBH,SAACM,EAAOiB,EAAIC,GAExB,IADI,IAACf,EAAQ,EAAKD,MAAbC,KAAoBgB,EAAUhB,EAC1BR,EAAI,EAAGA,EAAIQ,EAAKI,OAAQZ,IAC7B,GAAIwB,EAAQxB,GAAGsB,KAAOA,EAAI,CACtBE,EAAQxB,GAAGuB,GAAOlB,EAClB,KACH,CAEL,EAAKe,SAAS,CAACZ,KAAMgB,IAAU,WAC3B,EAAKC,cACR,GACJ,IAlCkB,sBAoCL,SAACH,GACX,EAAKF,UAAS,SAAAC,GAAS,MAAK,CACxBb,KAAMa,EAAUb,KAAKC,QAAO,SAAAC,GAAG,OAAIA,EAAIY,KAAOA,CAAf,IADZ,IAEnB,WACA,EAAKG,cACR,GACJ,IAxCG,EAAKlB,MAAQ,CACTC,KAAM,IAEV,EAAKL,SAAWJ,IALD,CAMlB,+CAsCD,WAAoB,WACXoB,EAAiBO,KAAKxB,MAAtBiB,cACLO,KAAKP,cAAgBQ,SAASC,kBAAkBT,GAAe,GAC/D,IACI,IAAId,EAAQQ,KAAKgB,MAAMH,KAAKP,cAAcd,OAAQG,EAAO,GACzDO,OAAOe,KAAKzB,GAAOY,KAAI,SAACN,EAAKX,GACzBQ,EAAKuB,KAAK,CAACpB,IAAKA,EAAKN,MAAOA,EAAMM,GAAMW,GAAI,EAAKvB,cACpD,IACD2B,KAAKN,SAAS,CACVZ,KAAMA,GAIb,CAFC,MAAOwB,GAER,CACJ,uBAED,WAAS,WACAxB,EAAQkB,KAAKnB,MAAbC,KACL,OACI,4BACI,oBAAQyB,KAAK,SAASC,UAAU,qDAAqDC,QAAST,KAAKU,UAAnG,kBAAkH,cAAGF,UAAU,yBAC/H,iBAAKA,UAAU,oBAAf,WACI,mBAAOA,UAAU,8CAAjB,WACI,4BACI,gBAAIA,UAAU,aAAd,WACI,+BACA,iCACA,mCACA,yCAGR,2BACK1B,GAAQA,EAAKI,OAAS,GAAKJ,EAAKS,KAAI,SAACoB,EAAKrC,GAAN,OACjC,2BACI,wBAAKA,EAAI,KACT,yBAAI,kBAAOiC,KAAK,OAAOC,UAAU,eAAe7B,MAAOgC,EAAI1B,IAAK2B,SAAU,SAACC,GAAD,OAAO,EAAKC,cAAcD,EAAEE,OAAOpC,MAAOgC,EAAIf,GAAI,MAAlD,OAC1E,yBAAI,kBAAOW,KAAK,OAAOC,UAAU,eAAe7B,MAAOgC,EAAIhC,MAAOiC,SAAU,SAACC,GAAD,OAAO,EAAKC,cAAcD,EAAEE,OAAOpC,MAAOgC,EAAIf,GAAI,QAAlD,OAC5E,yBAAI,mBAAQW,KAAK,SAASC,UAAU,cAAcC,QAAS,EAAKO,YAAYC,KAAK,EAAMN,EAAIf,IAAvF,UAA4F,cAAGY,UAAU,uBAJxGG,EAAIf,GADoB,UAU3Cd,GAAQA,EAAKI,QAAU,IAAK,cAAGsB,UAAU,mBAAb,mCAI7C,sFA3FCjC,CAA4B2C,EAAAA","sources":["webpack:///./packages/Zeus/resources/js/components/ReactKeyValueEditor/ReactKeyValueEditor.jsx"],"sourcesContent":["import {Component} from 'react'\n\nfunction* generateId() {\n    let i = 1\n    while (true) {\n        yield i++\n    }\n}\n\nclass ReactKeyValueEditor extends Component {\n    constructor(props) {\n        super(props)\n        this.state = { \n            data: []\n        }\n        this.uniqueId = generateId()\n    }\n\n    generateId = () => this.uniqueId.next().value\n\n    exportObject = () => {\n        let {data} = this.state\n        let newObject = data.filter(obj => obj.key.length > 0)\n        newObject = newObject.length > 0 ? JSON.stringify(Object.fromEntries(newObject.map(item => [item.key, item.value]))) : \"\"\n        this.targetElement.value = newObject\n    }\n\n    addNewRow = () => {\n        this.setState(prevState => ({\n            data: [...prevState.data, {key: \"\", value: \"\", id: this.generateId()}]\n        }))\n    }\n\n    onChangeValue = (value, id, col) => {\n        let {data} = this.state, newData = data\n        for (let i = 0; i < data.length; i++) {\n            if (newData[i].id === id) {\n                newData[i][col] = value\n                break;\n            }\n        }\n        this.setState({data: newData}, () => {\n            this.exportObject()\n        })\n    }\n\n    onDeleteRow = (id) => {\n        this.setState(prevState => ({\n            data: prevState.data.filter(obj => obj.id !== id)\n        }), () => {\n            this.exportObject()\n        })\n    }\n\n    componentDidMount() {\n        let {targetElement} = this.props\n        this.targetElement = document.getElementsByName(targetElement)[0]\n        try {\n            let value = JSON.parse(this.targetElement.value), data = []\n            Object.keys(value).map((key, i) => {\n                data.push({key: key, value: value[key], id: this.generateId()})\n            })\n            this.setState({\n                data: data\n            })\n        } catch (error) {\n            \n        }\n    }\n\n    render() {\n        let {data} = this.state\n        return (\n            <div>\n                <button type=\"button\" className='btn bg-emerald-500 text-white hover:bg-emerald-600' onClick={this.addNewRow}>add <i className='far fa-plus ml-1'></i></button>\n                <div className='p-3 lg:col-span-2'>\n                    <table className='awesome-table table-auto w-full text-center'>\n                        <thead>\n                            <tr className='text-white'>\n                                <th>#</th>\n                                <th>key</th>\n                                <th>value</th>\n                                <th>delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {data && data.length > 0 && data.map((row, i) => (\n                                <tr key={row.id}>\n                                    <th>{i + 1}</th>\n                                    <td><input type=\"text\" className='simple-input' value={row.key} onChange={(e) => this.onChangeValue(e.target.value, row.id, \"key\")}/></td>\n                                    <td><input type=\"text\" className='simple-input' value={row.value} onChange={(e) => this.onChangeValue(e.target.value, row.id, \"value\")}/></td>\n                                    <td><button type=\"button\" className='btn btn-red' onClick={this.onDeleteRow.bind(this, row.id)}><i className='far fa-trash'></i></button></td>\n                                </tr>\n                            ))}\n                        </tbody>\n                    </table>\n                    {!data || data.length <= 0 && <p className='text-center mt-2'>There is no data</p>}\n                </div>\n            </div>\n        );\n    }\n}\n \nexport default ReactKeyValueEditor;"],"names":["generateId","i","ReactKeyValueEditor","props","uniqueId","next","value","newObject","state","data","filter","obj","key","length","JSON","stringify","Object","fromEntries","map","item","targetElement","setState","prevState","id","col","newData","exportObject","this","document","getElementsByName","parse","keys","push","error","type","className","onClick","addNewRow","row","onChange","e","onChangeValue","target","onDeleteRow","bind","Component"],"sourceRoot":""}