{"version":3,"file":"js/145.js","mappings":"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","sources":["webpack:///./resources/js/userarea/Pages/Private/Dashboard/Dashboard.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { useHttpService } from '../../../hooks'\n// components\nconst BottomItem = React.lazy(() => import('./components/BottomItem'));\nconst MiddleItem = React.lazy(() => import('./components/MiddleItem'));\nconst TopItem    = React.lazy(() => import('./components/TopItem'));\n\nclass Dashboard extends Component {\n    constructor(props) {\n        super(props);\n        this.http = useHttpService('/userarea/stats')\n        this.state = {\n            statistics: {\n                invoices_count: false,\n                orders_count: false,\n                tickets_count: false,\n                orders: {}\n            },\n            recent_orders: [],\n            recent_pays: [],\n            recent_notifications: []\n        }\n    }\n\n    loadStats = async () => {\n        const [general, orders, latest] = await Promise.all([\n            this.http.get('/general'),\n            this.http.get('/orders'),\n            this.http.get('/latest')\n        ]);\n        this.setState(prev => ({\n            statistics: {...prev.statistics, ...general, orders: orders},\n            recent_orders: [...latest.orders.map(x => ({text: x.text, href: `/orders/${x.id}`}))],\n            recent_pays: [...latest.transactions.map(x => ({text: x.text, href: `/finance/transactions`}))],\n            recent_notifications: latest.notifications.map(x => ({text: x.data.title, href: '#'}))\n        }))\n    }\n\n    componentDidMount() {\n        document.title = \"داشبورد\"\n        this.loadStats()\n    }\n\n    render() {\n        let { statistics, recent_orders, recent_pays, recent_notifications } = this.state\n        let components = {top_items: TopItem, middle_items: MiddleItem, bottom_items: BottomItem}\n        let dashboard_items = {\n            top_items: [\n                {\n                    title: \"سفارش در حال انجام\",\n                    number: statistics.orders_count,\n                    icon: \"fas fa-clipboard-list\",\n                    buttons: [\n                        {title: \"لیست سفارشات\", href: \"/orders\"},\n                        {title: \"سفارش جدید\", href: \"#special-order\"}\n                    ]\n                },\n                {\n                    title: \"فاکتور پرداخت نشده\",\n                    number: statistics.invoices_count,\n                    icon: \"fas fa-file-invoice-dollar\",\n                    buttons: [\n                        {title: \"پرداخت فاکتور ها\", href: \"#factors_pay\"},\n                        {title: \"پیش فاکتور ها\", href: \"/finance/invoices\"},\n                        {title: \"فاکتور ها\", href: \"/finance/invoices?active\"}\n                    ]\n                },\n                {\n                    title: \"تیکت های در حال بررسی\",\n                    number: statistics.tickets_count,\n                    icon: \"fas fa-headset\",\n                    buttons: [\n                        {title: \"تیکت جدید\", href: \"/tickets/new\"},\n                        {title: \"لیست تیکت ها\", href: \"/tickets\"}\n                    ]\n                }\n            ],\n            middle_items: [\n                {title: \"سفارشات تکمیل شده\", number: statistics.orders.completed},\n                {title: \"سفارشات در انتظار تایید\", number: statistics.orders.awaiting},\n                {title: \"سفارشات پیش پرداخت شده\", number: statistics.orders.prepaid}\n            ],\n            bottom_items: [\n                {title: \"سفارشات اخیر\", items: recent_orders},\n                {title: \"پرداخت های اخیر\", items: recent_pays},\n                {title: \"آخرین پیام ها\", items: recent_notifications}\n            ]\n        }\n        return (\n            <div className=\"dashboard-container\">\n                {Object.keys(dashboard_items).map((key, i) => (\n                    dashboard_items[key].map((item, index) => (\n                        React.createElement(components[key], {key: index, ...item})\n                    ))\n                ))}\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    user: state.auth.user\n})\nexport default connect(mapStateToProps)(Dashboard);"],"names":["i","BottomItem","React","MiddleItem","TopItem","Dashboard","props","Promise","all","http","get","general","orders","latest","setState","prev","statistics","recent_orders","map","x","text","href","id","recent_pays","transactions","recent_notifications","notifications","data","title","useHttpService","state","invoices_count","orders_count","tickets_count","document","this","loadStats","components","top_items","middle_items","bottom_items","dashboard_items","number","icon","buttons","completed","awaiting","prepaid","items","className","Object","keys","key","item","index","Component","connect","user","auth"],"sourceRoot":""}