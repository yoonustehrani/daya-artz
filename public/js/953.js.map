{"version":3,"file":"js/953.js","mappings":";qbACA,4gGAAAA,GAAA,wBAAAA,EAAA,sBAAAA,GAAA,iBAAAA,GAAA,0oDAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,4bAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yhBAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,qGAAAA,EAAA,yBAAAA,GAAA,IAAAA,EAAA,uBAAAA,GAAA,yzDAMMC,EAAAA,SAAAA,gTACF,WAAYC,GAAO,sHACf,cAAMA,IADS,iBAkBH,WACZ,IAAKC,EAA2B,EAAKD,MAAME,OAAtCD,wBACLE,cAAc,EAAKC,UACfH,EAA0B,GAC1B,EAAKI,SAAS,CAACC,SAAUL,IAA0B,WAC/C,EAAKG,SAAWG,aAAY,WACpB,EAAKC,MAAMF,UAAY,EACvBH,cAAc,EAAKC,UAEnB,EAAKC,UAAS,SAAAI,GAAS,MAAK,CACxBH,SAAUG,EAAUH,SAAW,EADZ,GAI9B,GAAE,IACN,GAER,IAlCkB,kCAmCJ,oGACU,EAAKN,MAAMU,WAAW,SADhC,OACLC,EADK,OAEX,EAAKC,gBACQD,EAAOE,QAAfC,MACK,EAAKC,MAAMC,QAAQ,CAACC,MAAO,+BAAgCC,MAAO,MAJjE,4CAnCI,qBAyCN,SAACC,GACVA,EAAEC,iBACF,EAAKf,SAAS,CAACgB,SAAS,GAAxB,YAA+B,oGACJ,EAAKrB,MAAMsB,UAAU,EAAKd,MAAMe,cAD5B,OACrBC,EADqB,OAE3B,EAAKnB,SAAS,CAACoB,UAAgC,IAAnBD,EAASE,MAAuBL,SAAS,GAAQ,EAAKT,eAFvD,2CAIlC,IA/CkB,uBAgDJ,SAACO,GACZA,EAAEC,iBACF,MAA8B,EAAKpB,MAA9B2B,EAAL,EAAKA,KAAMC,EAAX,EAAWA,gBACS,IAAhBD,EAAKE,QACL,EAAKxB,SAAS,CAACyB,YAAY,GAA3B,YAAkC,oGACTF,EAAgBD,GADP,QACxBhB,EADwB,QAEnBE,UAAaF,EAAOE,QAAQkB,UACnC,EAAKhB,MAAMW,MAAM,CAACT,MAAO,yBAA0BC,MAAO,MAE9D,EAAKb,SAAS,CAACyB,YAAY,IALG,2CAQzC,IA1DG,EAAKtB,MAAQ,CACTe,aAAcvB,EAAMgC,KAAKT,aACzBE,MAAM,EACNJ,SAAS,EACTf,SAAUN,EAAME,OAAOD,wBACvB6B,YAAY,GAEhB,EAAK1B,SAAW,KAChB,EAAKW,MAAQ,IAAIkB,EAAAA,EAVF,CAWlB,+CACD,WACIC,SAASjB,MAAQ,kBACpB,qCACD,WACId,cAAcgC,KAAK/B,SACtB,uBA4CD,WAAS,WACL,EAA4C+B,KAAK3B,MAA5CF,EAAL,EAAKA,SAAUmB,EAAf,EAAeA,KAAMJ,EAArB,EAAqBA,QAASS,EAA9B,EAA8BA,WAC9B,EAAkFK,KAAKnC,MAAjFoC,EAAN,EAAMA,cAAeT,EAArB,EAAqBA,KAAMK,EAA3B,EAA2BA,KAAM9B,EAAjC,EAAiCA,OAAQmC,EAAzC,EAAyCA,aAAcC,EAAvD,EAAuDA,QAASC,EAAhE,EAAgEA,cAC3DC,EAAiBtC,EAAjBsC,cACL,OAAOR,EAAKT,cAAgBS,EAAKS,gBAC/B,SAAC,KAAD,CAAUC,GAAG,gBAEX,8BACGjB,GAuBC,4BACI,+CACA,iBAAMkB,SAAUR,KAAKS,WAAYC,UAAU,aAA3C,UACI,iBAAKA,UAAU,cAAf,WACI,gBAAKA,UAAU,sBAAf,UACI,mBAAQC,SAAUzB,EAASwB,UAAU,qCAAqCE,KAAK,SAA/E,uBAEJ,kBAAOA,KAAK,OAAOF,UAAU,6BAA6BG,MAAOb,KAAK3B,MAAMe,aAAc0B,SAAU,SAAC9B,GAAD,OAAO,EAAKd,SAAS,CAACkB,aAAcJ,EAAE+B,OAAOF,OAA7C,UAG5G,mBAAQH,UAAU,oCAAoCE,KAAK,SAASI,QAAS,kBAAM,EAAK9C,SAAS,CAACoB,MAAM,GAA3B,EAA7E,wBAhCJ,4BACI,8CACA,iIACA,iBAAMkB,SAAUR,KAAKiB,aAAcP,UAAU,aAA7C,UACI,iBAAKA,UAAU,cAAf,WACI,kBAAOE,KAAK,OAAOM,UAAW,EAAGL,MAAOrB,EAAMkB,UAAU,6BAA6BS,YAAY,YAAYL,SAAUb,EAAcmB,KAAKpB,KAAM,aAAc,UAC7JE,IAAgB,iBAAMQ,UAAU,gBAAhB,UAAgC,SAAC,EAAAW,SAAD,CAAUC,KAAM,GAAIC,MAAM,eAC3E,iBAAKb,UAAU,qBAAf,WACI,mBAAQC,SAAUhB,GAAcH,EAAKE,OAAS,EAAGgB,UAAU,qCAAqCE,KAAK,SAArG,mBACCP,EAAgB,IACb,mBACAO,KAAK,SACLD,SAAUxC,EAAW,EACrB6C,QAAShB,KAAKwB,aACdd,UAAU,iBAJV,SAI4BvC,EAAW,EAAIA,EAAW,wBAKtE,uCAAe0B,EAAKT,aAApB,kBAA+C,iBAAMsB,UAAU,aAAaM,QAAS,kBAAM,EAAK9C,SAAS,CAACoB,MAAM,GAA3B,EAAtC,wBAC/C,iBAAMoB,UAAU,oCAAoCM,QAASZ,EAAcgB,KAAKpB,KAAMG,EAAS,SAA/F,qCAiBf,sFA5GCvC,CAAwB6D,EAAAA,WA0H9B,SAAeC,EAAAA,EAAAA,KAXS,SAAArD,GAAK,MAAK,CAC9BwB,KAAMxB,EAAMsD,KAAK9B,KACjB9B,OAAQM,EAAMsD,KAAK5D,OAFM,IAKF,SAAA6D,GAAQ,MAAK,CACpCzC,UAAW,SAAAC,GAAY,OAAIwC,GAASC,EAAAA,EAAAA,IAAsBzC,GAAnC,EACvBb,WAAY,SAAAuD,GAAM,OAAIF,GAASG,EAAAA,EAAAA,IAAwBD,GAArC,EAClBrC,gBAAiB,SAAAD,GAAI,OAAIoC,GAASI,EAAAA,EAAAA,IAAkBxC,GAA/B,EAHU,GAMnC,CAA4D5B","sources":["webpack:///./resources/js/userarea/Pages/Auth/PhoneValidation.jsx"],"sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Redirect } from 'react-router';\nimport { changeUserPhoneNumber, resendBasedOnAuthMethod, verifyPhoneNumber } from '../../redux/actions';\nimport AlertService from '../../../services/AlertService';\nimport { Windmill } from 'react-activity';\n\nclass PhoneValidation extends Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            phone_number: props.user.phone_number,\n            edit: false,\n            editing: false,\n            resendIn: props.resend.next_attempt_in_seconds,\n            requesting: false\n        }\n        this.interval = null\n        this.Alert = new AlertService()\n    }\n    componentDidMount() {\n        document.title = 'تایید شماره تلفن'\n    }\n    componentWillUnmount() {\n        clearInterval(this.interval)\n    }\n    setResendTime = () => {\n        let {next_attempt_in_seconds} = this.props.resend\n        clearInterval(this.interval)\n        if (next_attempt_in_seconds > 0) {\n            this.setState({resendIn: next_attempt_in_seconds}, () => {\n                this.interval = setInterval(() => {\n                    if (this.state.resendIn <= 0) {\n                        clearInterval(this.interval)\n                    } else {\n                        this.setState(prevState => ({\n                            resendIn: prevState.resendIn - 1\n                        }))\n                    }\n                }, 1000);\n            })\n        }\n    }\n    handleResend = async () => {\n        const result = await this.props.authResend('phone');\n        this.setResendTime()\n        let {okay} = result.payload\n        if (okay) this.Alert.success({title: 'پیامک حاوی کد تایید ارسال شد', timer: 2000})\n    }\n    handleEdit = (e) => {\n        e.preventDefault()\n        this.setState({editing: true}, async () => {\n            const response = await this.props.editPhone(this.state.phone_number)\n            this.setState({edit: typeof response.error !== 'undefined', editing: false}, this.setResendTime)\n        })\n    }\n    handleVerify = (e) => {\n        e.preventDefault();\n        let {code, authVerifyPhone} = this.props;\n        if (code.length === 6) {\n            this.setState({requesting: true}, async () => {\n                const result = await authVerifyPhone(code)\n                if (result.payload && ! result.payload.verified) {\n                    this.Alert.error({title: 'کد وارد شده اشتباه است', timer: 2000})\n                }\n                this.setState({requesting: false})\n            })\n        }\n    }\n    render() {\n        let {resendIn, edit, editing, requesting} = this.state\n        let { onChangeField, code, user, resend, sending_data, history, changeSection } = this.props\n        let {left_attempts} = resend\n        return user.phone_number && user.phone_verified\n        ? <Redirect to=\"/dashboard\"/>\n        : (\n            <>\n            {! edit \n            ?   <div>\n                    <h2>تایید شماره تلفن</h2>\n                    <p>جهت تکمیل فرآیند ثبت نام لازم است کد احراز هویت ارسال شده به شماره تلفن خود را در کادر زیر وارد کنید</p>\n                    <form onSubmit={this.handleVerify} className=\"form-group\">\n                        <div className=\"input-group\">\n                            <input type=\"text\" maxLength={6} value={code} className=\"form-control text-left ltr\" placeholder=\"کد ارسالی\" onChange={onChangeField.bind(this, \"validation\", \"code\")}/>\n                            {sending_data && <span className='auth-windmill'><Windmill size={30} color=\"#6332df\" /></span>}\n                            <div className=\"input-group-append\">\n                                <button disabled={requesting || code.length < 6} className=\"btn btn-def btn-primary m-0 w-auto\" type=\"submit\">تایید</button>\n                                {left_attempts > 0 &&\n                                    <button \n                                    type='button'\n                                    disabled={resendIn > 0}\n                                    onClick={this.handleResend}\n                                    className=\"btn m-0 w-auto\">{resendIn > 0 ? resendIn : \"ارسال مجدد\"}</button>\n                                }\n                            </div>\n                        </div>\n                    </form>\n                    <p>شماره تلفن {user.phone_number} اشتباه است ؟ <span className='span-hover' onClick={() => this.setState({edit: true})}>ویرایش</span></p>\n                    <span className=\"change-form-mobile d-md-none mt-2\" onClick={changeSection.bind(this, history, \"login\")}>خروج از حساب کاربری</span>              \n                </div>\n            :   <div>\n                    <h2>ویرایش تلفن همراه</h2>\n                    <form onSubmit={this.handleEdit} className=\"form-group\">\n                        <div className=\"input-group\">\n                            <div className=\"input-group-prepend\">\n                                <button disabled={editing} className=\"btn btn-def m-0 w-auto btn-success\" type=\"submit\">ویرایش</button>\n                            </div>\n                            <input type=\"text\" className=\"form-control text-left ltr\" value={this.state.phone_number} onChange={(e) => this.setState({phone_number: e.target.value})}/>\n                        </div>\n                    </form>\n                    <button className=\"btn btn-def btn-outline-secondary\" type=\"button\" onClick={() => this.setState({edit: false})}>بازگشت</button>\n                </div>\n            }\n            </>\n        );\n    }\n}\n\nconst mapStateToProps = state => ({\n    user: state.auth.user,\n    resend: state.auth.resend\n})\n\nconst mapDispatchToProps = dispatch => ({\n    editPhone: phone_number => dispatch(changeUserPhoneNumber(phone_number)),\n    authResend: method => dispatch(resendBasedOnAuthMethod(method)),\n    authVerifyPhone: code => dispatch(verifyPhoneNumber(code))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(PhoneValidation);"],"names":["i","PhoneValidation","props","next_attempt_in_seconds","resend","clearInterval","interval","setState","resendIn","setInterval","state","prevState","authResend","result","setResendTime","payload","okay","Alert","success","title","timer","e","preventDefault","editing","editPhone","phone_number","response","edit","error","code","authVerifyPhone","length","requesting","verified","user","AlertService","document","this","onChangeField","sending_data","history","changeSection","left_attempts","phone_verified","to","onSubmit","handleEdit","className","disabled","type","value","onChange","target","onClick","handleVerify","maxLength","placeholder","bind","Windmill","size","color","handleResend","Component","connect","auth","dispatch","changeUserPhoneNumber","method","resendBasedOnAuthMethod","verifyPhoneNumber"],"sourceRoot":""}